{
  "name": "gengojs",
  "version": "0.1.9",
  "description": "An uber basic and simple i18n library for Express 4",
  "main": "gengo.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "dependencies": {
    "app-root-path": "^0.1.0",
    "locale": "0.0.17",
    "moment": "^2.8.2",
    "numeral": "^1.5.3",
    "sprintf-js": "0.0.7"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/iwatakeshi/gengojs.git"
  },
  "keywords": [
    "i18n",
    "translate",
    "gengo"
  ],
  "author": {
    "name": "iwatakeshi"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/iwatakeshi/gengojs/issues"
  },
  "homepage": "https://github.com/iwatakeshi/gengojs",
  "readme": "Gengo.js\n========\n##QA\n\n###What is Gengo.js?\ngengo is a library that allows you to translate your pages automatically (hot swapping) without having to do tedious stuff...well that is my goal. gengo only requires you to provide the translation files and then your done :).\nAlso, before moving on, Moment.js and Numeral.js are part of gengo. What does that mean? Well it simply means you get the best of the best in a small package. Technically it means that moment and numeral will change along with gengo (see [Translating](https://github.com/iwatakeshi/gengojs/wiki/Translating) for more details). \n\n###Where to begin?\n\ngengo is available on npm. To begin:\n```bash\nsudo npm install gengojs\n#or\nsudo npm install gengojs --save\n```\nthen in your app.js\n```js\n//require\nvar gengo = require('gengojs');\n//configure gengo (optional)\ngengo.config({\n    debug: false\n    localePath: 'Your locale folder'\n    default: 'en_US' \n    supported: ['ja','en_US']\n});\n//init before your routes. if using express generator it would be right after the last app.use\ngengo.init(app);\n\n```\nfor more configurations options see [API](https://github.com/iwatakeshi/gengojs/wiki/API).\n\nFrom there you have two options, you can have gengo to:\n* load the words/sentences from the translation file directly\n* load the words/sentences from the translation file by route (not fully tested)\nan example will look like this in your locale folder:\n\n```js\n//ja.js\n\n//really simple, gengojs will just get what you have\nmodule.exports = {\n    \"Welcome to express\": \"エクスプレスへようこそ\",    \n};\n\n//with viewAware: true\nmodule.exports = {\n    index:{\n        \"Welcome to express\": \"エクスプレスへようこそ\",\n    }\n}\n```\n\nNow in your template file (Note: I've only used Jade, others should work)\n```jade\nextends layout\n\nblock content\n  h1= title\n   //pretty much the same as i18n '__' (can be changed through config. see API)\n  //this will output エクスプレスへようこそ or Welcome to express\n  p Welcome to #{__(\"Welcome to express\")} \n```\nFor more templating and translation file examples see [Translating](https://github.com/iwatakeshi/gengojs/wiki/Translating)\n\n###Can I use gengo within routes?\nYou know what? Yes! Note that it is experimental since I just discovered it. I haven't fully tested it, but it would look like so:\n```js\n//index.jade, viewAware: false\nvar express = require('express');\nvar router = express.Router();\nvar gengo = require('gengojs');\n/* GET home page. */\nrouter.get('/', function(req, res) {\n    console.log(gengo('Hello')); //outputs ハロー or Hello\n    res.render('index', {\n        title: 'Express'\n    });\n});\n\nmodule.exports = router;\n\n```\n###Can users change the language?\nYes! The only way the user can change language (at the moment) is by using cookies. see [Translating](https://github.com/iwatakeshi/gengojs/wiki/Translating) for an example.\n\n###Can I contribute?\nSure! See [Contribute](https://github.com/iwatakeshi/gengojs/wiki/Contribute) for more details.\n\n##Acknowledgements\ngengo was made possible by:\n* [locale](https://github.com/jed/locale)\n* [App Root Path](https://github.com/inxilpro/node-app-root-path)\n* [Moment.js](https://github.com/moment/moment)\n* [Numeral.js](https://github.com/adamwdraper/Numeral-js)",
  "readmeFilename": "README.md",
  "gitHead": "aad1b5605a2db6706359d79b3e44f7037473711d",
  "_id": "gengojs@0.1.9",
  "_shasum": "0e54a731d4bc98741addf866b6ffa8495dca3f84",
  "_from": "gengojs@"
}
